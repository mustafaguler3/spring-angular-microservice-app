node {
    def repourl = "${REGISTRY_URL}/${PROJECT_ID}/${ARTIFACT_REGISTRY}"
    def mvnHome = tool name: 'maven', type: 'maven'
    def mvnCMD = "${mvnHome}/bin/mvn"
    stage('Checkout') {
        checkout([$class: 'GitSCM',
            branches: [[name: '*/main']],
            extensions: [],
            userRemoteConfigs: [[credentialsId: 'git',
            url: 'https://github.com/mustafaguler3/ConfigServer.git']])
    }
    stage('Build and Push Image') {
        withCredentials([file(credentialsId: 'gcp',variable: 'GCP_KEY')]){
        sh("gcloud auth activate-service-account --key-file=${GCP_KEY}")
        sh 'gcloud auth configure-docker us-west2-docker.pkg.dev'
        sh "${mvnCMD} clean install jib:build -DREPO_URL=${REGISTRY_URL}/${PROJECT_ID}/${ARTIFACT_REGISTRY}"
        }
    }
    stage('Deploy') {
        sh "sed -i 's|IMAGE_URL${repourl}|g' k8s/deployment.yml"
        step([$class: 'KubernetesEngineBuilder',
            projectId: env.PROJECT_ID,
            clusterName: env.CLUSTER,
            location: env.ZONE,
            manifestPattern: 'k8s/deployment.yml',
            credentialsId: env.PROJECT_ID,
            verifyDeployments: true])
    }

}